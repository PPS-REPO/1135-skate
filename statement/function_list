다음은 각 언어별로 문제의 유사 난수 생성기를 구현한 코드이다. 언어에 맞는 코드를 그대로 사용하면 된다. 유사 난수 생성 방법과 문제의 풀이와는 관련이 없음이 보장된다.

- C/C++ : https://onlinegdb.com/dpcDkEEWx
- Python : https://onlinegdb.com/LL8tg_USZ

함수 목록
- get_random(x, y) : x 이상 y 이하의 범위에서 임의의 정수를 반환한다.
- ready(seeds) : 첫 seed 값을 설정한다.

$V_k, L_i, R_i$ 값을 구하는 방법
- $V_k$ : 먼저 ready($Q_{seed}$)를 호출한 뒤, get_random($V_{min}, V_{max}$)를 $N$번 호출하여 반환되는 값을 순서대로 $V_1,V_2,\cdots,V_N$으로 정한다. 이렇게 구한 값들은 항상 $1\leq V_k \leq 10^9$를 만족한다. 
- $L_i, R_i$ : 먼저 ready($Q_{seed}$)를 호출한 뒤, get_random($L_{min},L_{max}$)를 호출하여 $L_i$ 값을 구하고, 이어서 get_random(max($L_i, R_{min}$), $R_{max}$)를 호출하여 $R_i$ 값을 구한다. 이 과정을 $Q$번 반복하여, 순서대로 $L_1,R_1,L_2,R_2,\cdots,L_Q,R_Q$를 정한다. 이렇게 구한 값들은 항상 $1\leq L_i \leq R_i \leq N$을 만족한다.

즉 함수 호출 흐름은 다음과 같다 :

ready($V_{seed}$) -> get_random($V_{min},V_{max}$) -> $\cdots $ -> get_random($V_{min},V_{max}$) -> ready($Q_{seed}$) -> get_random($L_{min},L_{max}$) -> get_random(max($L_i,R_{min}$),$R_{max}$) -> $\cdots$ -> get_random($L_{min},L_{max}$) -> get_random(max($L_i,R_{min}$),$R_{max}$)